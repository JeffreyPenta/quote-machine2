{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["quoteDB","App","useState","quote","setQuote","author","setAuthor","setRandomNumber","quotesArray","setQuotesArray","fetchQuotes","url","a","fetch","response","json","parsedJson","quotes","useEffect","className","id","href","encodeURI","onClick","randomInteger","Math","floor","length","random","getRandomQuote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAIIA,EAAW,yIAgDAC,MA9Cf,WAAgB,IAAD,EACaC,mBAAS,4GADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,oBAFxB,mBAENG,EAFM,KAEEC,EAFF,OAI2BJ,mBAAS,GAJpC,mBAIQK,GAJR,aAMyBL,qBANzB,mBAMNM,EANM,KAMOC,EANP,KAQPC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEOA,EAASC,OAFhB,OAEZC,EAFY,OAGlBP,EAAeO,EAAWC,QAHR,2CAAH,sDAiBjB,OAZAC,qBAAU,WACRR,EAAYV,KACX,CAACA,IAWF,qBAAKmB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKC,GAAG,YAAR,UACE,sBAAKA,GAAG,aAAR,UACE,mBAAGA,GAAG,OAAN,SACGjB,IAEH,mBAAGiB,GAAG,SAAN,SACGf,OAGL,mBAAGe,GAAG,cAAcC,KAAMC,UAAU,4CAAD,OAA6CnB,EAA7C,aAAuDE,IAA1F,yBACA,wBAAQe,GAAG,YAAYG,QAAS,kBApBjB,WACrB,IAAIC,EAAgBC,KAAKC,MAAMlB,EAAYmB,OAAOF,KAAKG,UACvDrB,EAAgBiB,GAChBpB,EAASI,EAAYgB,GAAerB,OACpCG,EAAUE,EAAYgB,GAAenB,QAgBKwB,IAApC,6CChCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ed77956.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport './App.css';\n\n\nlet quoteDB =  'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n\nfunction App() {\n  const [quote, setQuote] = useState('\"Limitations live only in our minds. But if we use our imaginations, our possibilities become limitless.')\n  const [author, setAuthor] = useState('Jamie Paolinetti')\n\n  const [randomNumber, setRandomNumber] = useState(0)\n\n  const [quotesArray, setQuotesArray] = useState()\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url)\n    const parsedJson = await response.json() \n    setQuotesArray(parsedJson.quotes)\n  }\n  useEffect(() => {\n    fetchQuotes(quoteDB)\n  }, [quoteDB])\n\n\n  const getRandomQuote = () => {\n    let randomInteger = Math.floor(quotesArray.length*Math.random())\n    setRandomNumber(randomInteger)\n    setQuote(quotesArray[randomInteger].quote)\n    setAuthor(quotesArray[randomInteger].author)\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"quote-box\">\n          <div id=\"quote-tile\">\n            <p id=\"text\">\n              {quote}\n            </p>\n            <p id=\"author\">\n              {author}\n            </p>\n          </div>\n          <a id=\"tweet-quote\" href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote} -${author}`)}>Tweet Quote</a>\n          <button id=\"new-quote\" onClick={()=>getRandomQuote()}>Generate a Random Quote</button>\n        </div>\n         \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}